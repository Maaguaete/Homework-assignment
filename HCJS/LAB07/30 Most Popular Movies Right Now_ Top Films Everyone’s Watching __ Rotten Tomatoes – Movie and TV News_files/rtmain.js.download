var staticHostVar = RT.rtApiUrl + '/static';
require.config({
    waitSeconds: 60,
    config: {
        text: {
            useXhr: function(url, protocol, hostname, port) {
                return true;
            }
        }
    },
    paths: {
        facebook : "//connect.facebook.net/en_US/all",
        jquery: "//ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min",
        bootstrap: "//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.4/js/bootstrap.min",
        backbone: "//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min",
        typeahead: "//twitter.github.io/typeahead.js/releases/latest/typeahead.bundle",
        marionette: "//cdnjs.cloudflare.com/ajax/libs/backbone.marionette/2.4.3/backbone.marionette",
        text: "//cdnjs.cloudflare.com/ajax/libs/require-text/2.0.12/text.min",
        underscore: "//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min",
        domReady: "//cdnjs.cloudflare.com/ajax/libs/require-domReady/2.0.1/domReady.min",
        "jquery-cookie" : "https://cdnjs.cloudflare.com/ajax/libs/jquery-cookie/1.4.1/jquery.cookie.min",
        "js-cookie" : "https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.1.1/js.cookie.min",
        jwplayer: "//jwpsrv.com/library/1h4VDLs_EeOAlSIACi0I_Q",
        jqueryui : "//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min",
        newsModel: staticHostVar + "/js/app/models/NewsModel",
        newsView: staticHostVar + "/js/app/views/PageHeaderNewsView",
        clamp: staticHostVar + "/js/lib/clamp.min",
        //search: RT.rtApiUrl + "/dist/fullscreen-search",
        RTVideo: "/wp-content/themes/RottenTomatoes/js/RTVideo"
    },
    shim: {
        "RTVideo" : {
            exports : "RTVideo"
        },
        "clamp" : {
            deps: ["jquery"]
        },
        "bootstrap" : {
            deps: ["jquery"]
        },
        "text": {
            deps: ["backbone"]
        },
        "marionette": {
            deps: ["jquery", "underscore", "backbone"],
            exports: "Marionette"
        },
        "domReady!": {
            exports : "domReady!"
        },
        "typeahead": {
            deps: ["jquery"]
        },
        "jwplayer": {
            exports: "jwplayer"
        },
        "facebook" : {
            exports: "FB"
        },
         "jqueryui" : {
            deps: ["jquery"]
        },
        "newsModel" : {
            exports: "newsModel"
        },
        "newsView" : {
            exports: "newsView"
        },
//        "search" : {
//            exports: "search"
//        }
    }
});

if (typeof jQuery === 'function') {
  define('jquery', function () { return jQuery; });
}

if (typeof Backbone === 'function') {
  define('backbone', function () { return Backbone; });
}

if (typeof _ === 'function') {
  define('underscore', function () { return _; });
}

(function($) {
//Use jQuerys .each() method to iterate over each link
    $('a').not('[href^="http"],[href^="https"],[href^="mailto:"],[href^="#"]').each(function() {
        if ($(this).attr("href") && $(this).attr("href").substr(0,2) !== "//") {
//Use .attr() to modify the href, when you provide a callback function
//the arguments passed are the attribute index and its value
            $(this).attr('href', function(index, value) {
//This fix solves the problem when you aren't at the root level of a site
// e.g. if you are at site.com/page1/ and the link href is "do/something"
// we need to make sure the absolute url becomes newsite.com/page1/do/something
// if we just prepended the new domain we would actually get newsite.comdo/something
// which obviously wouldn't work
                if (value && value.substr(0,1) !== "/") {
                    value = window.location.pathname + value;
                }
//When you return from the callback function for .attr() it will set the attribute
//to this new value.
//We don't use a trailing slash on mynewurl.com because it will already exist if
//the href starts with a / or it will be part of window.location.pathname

                if(RT && RT.rtUrl) {
                    return RT.rtUrl + value;
                }
                return "https://www.rottentomatoes.com" + value;
            });
        }
    });
})(jQuery);


define("globals", ["jquery", "backbone", "facebook"], function($, Backbone, FB) {
        console.log("initializing RT globals object");
        RT = RT || {};

        RT.Backbone = {
                Views : {},
                Models : {},
                Routers : {},
                Collections : {}
            };

        RT.StaticHost = staticHostVar;
        RT.EditorialHost = "";
        RT.EditorialImageHost = "https://editorial.rottentomatoes.com";
        RT.social_init = $.Deferred();
        RT.fb_ready = $.Deferred();
        RT.fb_connected = $.Deferred();
        RT.ads=[];
        RT.LoginStatusModel = new Backbone.Model();

        FB.init({
            appId: '326803741017',
            version : 'v2.2',
            status: true,
            cookie: true,
            xfbml: true
        });

        RT.utmMedium = "";
        RT.twtrtext = "";

        RT.Sharing = function() {
            var facebookLike = function(ele) {
                    if ($(".social-tools-facebook-like", ele).hasClass("liked")) {
                        $(".social-tools-facebook-like", ele).removeClass("liked");
                        $(".fb_like").attr("src", RT.StaticHost + "/images/social/social_fb_like.png");
                        FB.api(
                            facebookLikeId,
                            'delete',
                            function(response) {}
                        );
                    } else {
                        $(".social-tools-facebook-like", ele).addClass("liked");
                        $(".fb_like").attr("src", RT.StaticHost + "/images/social/social_fb_liked.png");
                        FB.api(
                            'me/og.likes',
                            'post',
                            {
                                object: document.URL
                            }, function(response) {}
                        );
                    }
                },
                fbLike_click = function(ele) {
                    if (RT.LoginStatusModel.get("loginPlatformCode") == undefined ||
                            RT.LoginStatusModel.get("loginPlatformCode") == "Unknown") {
                        var scope = ele.attr("scope");
                        if (undefined === scope) {
                            scope = 'email,publish_actions,user_friends';
                        }
                        FB.login(function(response) {
                            RT.fb_connected.done(function() {
                                if (ele.data("redirect") !== undefined) {
                                    window.location.href = ele.data("redirect");
                                }
                            });
                            if (!response.authResponse) {
                                console.log('User cancelled Facebook login or did not fully authorize.');
                                $(".social-tools-facebook-like", ele).removeClass("liked");
                                $(".fb_like", ele).attr("src", RT.StaticHost+"/images/social/social_fb_like.png");
                            } else {
                                facebookLike();
                            }
                        }, {scope: scope});
                    } else {
                        facebookLike(ele);
                    }
                },
                fbShare_click = function() {
                    var url = document.URL;
                    url = addParam(url, "utm_campaign", "sharelinks");
                    url = addParam(url, "utm_medium", RT.utmMedium);
                    url = addParam(url, "utm_source", "fbk");

                    FB.ui({
                        method: 'feed',
                        link: url
                    }, function(response){});
                },
                bit_url = function(url){
                    var url = url,
                        username = "flixstertomatoes",
                        key = "R_244b3f625ae2e1fbdc77b2bab2607790",
                        bit_url = "";
                    return $.ajax({
                        url: "https://api.bit.ly/v3/shorten",
                        async: true,
                        data: {longUrl:url,apiKey:key,login:username},
                        dataType: "jsonp"
                    });
                },
                newTwitterWindow = function(){
                    var twitterWin = window.open("", "_blank", getWindowParams()),
                        url = document.URL;
                    twitterHelper(url, twitterWin);
                },
                twitterHelper = function(url, twitterWin) {
                    url = addParam(url, "utm_campaign", "sharelinks");
                    url = addParam(url, "utm_medium", RT.utmMedium);
                    url = addParam(url, "utm_source", "twtr");

                    twitterWin.location = 'https://twitter.com/share?url=' + encodeURIComponent(url) + "&text=" + encodeURIComponent("") + "&via=" + encodeURIComponent("RottenTomatoes");
                    twitterWin.focus();
                },
                newPinterestWindow = function(){
                    var mediaUrl=$(".pinterestImage").attr("src"),
                        description=document.title,
                        url = document.URL;
                    url = addParam(url, "utm_campaign", "sharelinks");
                    url = addParam(url, "utm_medium", RT.utmMedium);
                    url = addParam(url, "utm_source", "pin");

                    window.open("https://pinterest.com/pin/create/link/?url=" + encodeURIComponent(url) + "&media=" + encodeURIComponent(mediaUrl) + "&description=" + encodeURIComponent(description), '_blank',  getWindowParams());
                },
                newGooglePlusWindow = function(){
                    var url = document.URL;
                    url = addParam(url, "utm_campaign", "sharelinks");
                    url = addParam(url, "utm_medium", RT.utmMedium);
                    url = addParam(url, "utm_source", "google");

                    window.open('https://plus.google.com/share?url='+encodeURIComponent(url),'_blank',getWindowParams());
                },
                newStumbleUponWindow = function(){
                    var url = document.URL;
                    url = addParam(url, "utm_campaign", "sharelinks");
                    url = addParam(url, "utm_medium", RT.utmMedium);
                    url = addParam(url, "utm_source", "stumble");

                    window.open('https://www.stumbleupon.com/submit?url=' + encodeURIComponent(url), '_blank',  getWindowParams());
                },
                getWindowParams = function() {
                    var width  = 575,
                        height = 450,
                        wLeft = window.screenLeft ? window.screenLeft : window.screenX,
                        wTop = window.screenTop ? window.screenTop : window.screenY,
                        left = wLeft + (window.innerWidth / 2) - (width / 2),
                        top = wTop + (window.innerHeight / 2) - (height / 2);
                    return 'status=0,location=0,menubar=0,width='+width+',height='+height+',top='+top+',left='+left;
                },
                addParam = function(myUrl, name, value) {
                    var re = new RegExp("([?&]" + name + "=)[^&]+", ""),
                            add = function(sep) {
                                myUrl += sep + name + "=" + encodeURIComponent(value);
                            },
                            change = function() {
                                myUrl = myUrl.replace(re, "$1" + encodeURIComponent(value));
                            };

                    if (myUrl.indexOf("?") === -1) {
                        add("?");
                    } else {
                        if (re.test(myUrl)) {
                            change();
                        } else {
                            add("&");
                        }
                    }
                    return myUrl;
                };
            return {
                fbLike_click: fbLike_click,
                fbShare_click: fbShare_click,
                newTwitterWindow: newTwitterWindow,
                newGooglePlusWindow: newGooglePlusWindow,
                newPinterestWindow: newPinterestWindow,
                newStumbleUponWindow: newStumbleUponWindow
            };
        }();

        return RT;
    });

require([staticHostVar + "/js/lib/s_code_rottentomatoes.js"], function(){ // s_code does not return s but sets it globally
    window.optimizely = window.optimizely || [];
    window.optimizely.push("activateSiteCatalyst");
});

require(["/wp-content/themes/RottenTomatoes/js/rtheaderview.js"]);
require(["/wp-content/themes/RottenTomatoes/js/rtvideoplayer.js"]);
require(["/wp-content/themes/RottenTomatoes/js/modalTrailer.js"], function(ModalTrailer) { new ModalTrailer({ el: jQuery("body")}); });

require([staticHostVar + "/js/app/views/SocialTool.js","text!" + staticHostVar + "/templates/SocialTools.html"], function(SocialTools, SocialToolTemplate) {
        new SocialTools({ el : "#social-tools-widget",  SocialToolTemplate : SocialToolTemplate});
});

(function() {
  var mps=mps||{}; mps._queue=mps._queue||{}; mps._queue.gptloaded=mps._queue.gptloaded||[];
  mps._queue.gptloaded.push(function() {
      if (mps.getResponsiveSet() !='0') { //DESKTOP or TABLET
          require(["js-cookie"], function(Cookies){
              var pageViewCount = Cookies.get("pvc");
              if (pageViewCount == null || (parseInt(pageViewCount) == 0) || (parseInt(pageViewCount) % 3 == 0)) {
                  mps.insertAd('#interstitial_ad','interstitial');
              }
          });
      } else if (mps.getResponsiveSet() == '0') {
          require(["js-cookie"], function(Cookies){
              var pageViewCount = Cookies.get("pvc");
              if (pageViewCount == null || (parseInt(pageViewCount) == 0) || (parseInt(pageViewCount) % 3 == 0)) {
                  mps.insertAd('#interstitial_ad','minterstitial');
              }
          });
      }
  });
})();

//Mobile Navigation Bottom Drawer
(function() {
    ['menu-btn', 'mobile-signup-btn', 'mobile-login-btn'].forEach(function(id) {
        document.getElementById(id).addEventListener('click', function() {
            document.getElementById('mobile-nav').classList.toggle('menu-opened');
            document.body.classList.toggle('noscroll');
        });
    });
    var allLinks = document.getElementById('nav-list').getElementsByTagName('a'),
        i,
        fullPath = location.href.split('#')[0];
    for (i = 0; i< allLinks.length; i += 1) {
        if (allLinks[i].href.split('#')[0] === fullPath &&
                allLinks[i].href !== fullPath + '#') {
            allLinks[i].classList.add('active');
        }
    }
})();
