define(["jquery", "globals", "jwplayer", "backbone", "underscore"], function($, RT, jwplayer, Backbone, _) {
    var RTVideo = Backbone.View.extend({
        initialize: function (options) {
            this.options = options || {};
            this.beforeEndWarningDuration= this.options.beforeEndWarningDuration || 10; // Default to show poststitial 10 seconds before video end.
            this.endWarningFlag = false;
            if (options.$el) {
                this.$el = options.$el;
            }
            this.changeVideo(options);

            this.$el.addClass("playerWrapper");
            this.$el.append(this.playerContent);
            if (options.playerReady) {
                this.playerReady = options.playerReady;
            }
            if (options.playerClose) {
                this.playerClose = options.playerClose;
            }
            if (options.playerComplete) {
                this.playerComplete = options.playerComplete;
            }
            this.addPlayerListeners();
        },

        addPlayerListeners: function () {
            this.playerContent.onComplete(function () {
                this.playerComplete();
            }.bind(this));

            this.playerContent.onPause(function () {
                this.playerPause();
            }.bind(this));

            this.playerContent.onPlay(_.debounce(function () {
                this.playerStart();
            }, 1000, true).bind(this));

            this.playerContent.onError(function () {
                this.playerError();
            }.bind(this));

            this.playerContent.onReady(function() {
                if (this.playerReady) {
                    this.playerReady();
                }
            }.bind(this));
        },

        changeVideo: function(options) {
            var playerSetupParams = {};
            if (options.playlist && options.urlHLS === '' && options.urlMP4 === '') {
                playerSetupParams = {
                    playlist: options.playlist,
                    width: options.width,
                    listbar: options.listbar
                };
            } else {
                playerSetupParams = {
                    playlist: [{
                        image: options.thumbnailImg,
                        sources: [
                            {file: options.urlHLS, type: "m3u8", "default": "true"},
                            {file: options.urlMP4, type: "mp4"}
                        ]
                    }],
                    height: options.height,
                    width: options.width,
                    aspectratio: options.aspectratio ? options.aspectratio : "16:9",
                    autostart: options.autostart,
                    primary: 'flash',
                    skin: "glow",
                    androidhls: 'true'
                };
            }

            if(this.options.preroll && !this.options.noAds) {
                // Check for '/?test=' param
                if(this.options.preroll.custParams != undefined && this.options.preroll.custParams.videoId == undefined) {
                    this.options.preroll.custParams.videoId = this.getParameterByName("videoId");
                }
                console.log("Target Video Id: " + this.options.preroll.custParams.videoId);
                var custParamsString = encodeURIComponent(decodeURIComponent($.param(this.options.preroll.custParams)));
                var googTag = "https://pubads.g.doubleclick.net/gampad/ads?sz=640x360&iu=/2620/rottentomatoes/" + this.options.preroll.dfpTarget + "&ciu_szs&impl=s&gdfp_req=1&env=vp&output=vast&unviewed_position_start=1&url=" + this.options.preroll.pageUrl +"&correlator=" + new Date().getTime() + "&cust_params=" + custParamsString + "&ad_rule=0";

                playerSetupParams.advertising = {
                    client: "googima",
                    tag: googTag
                }
            }
            this.playerContent = jwplayer(this.$el.attr("id")).setup(playerSetupParams);
        },

        close: function() {
            dataLayer.push({'event': 'JWPlayer', 'action' : "close"});
            this.playerContent.remove();
            if (this.playerClose) {
                this.playerClose();
            }
        },

        //onNearEnd: function(offset, callback) {
        //    this.playerContent.onTime(function(e) {
        //        if(e.duration - e.position < this.beforeEndWarningDuration  && !this.endWarningFlag){
        //            this.endWarningFlag = true;
        //            this.trigger('end-warning');
        //        }
        //    }.bind(this));
        //},

        playerStart: function() {
            dataLayer.push({'event': 'JWPlayer', 'action' : "start"});
            this.endWarningFlag = false;
            this.trigger('player-start');
        },

        playerComplete: function() {
            dataLayer.push({'event': 'JWPlayer', 'action' : 'end'});
            this.trigger('player-complete');
        },

        playerPause: function() {
            dataLayer.push({'event': 'JWPlayer', 'action' : 'paused'});
            this.trigger('player-pause')
        },


        playerError: function() {
            dataLayer.push({'event': 'JWPlayer', 'action' : 'error'});
            this.trigger('player-error')
        },

        render: function() {
            return this
        },

        getParameterByName: function (name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
    });
    return RTVideo;
});